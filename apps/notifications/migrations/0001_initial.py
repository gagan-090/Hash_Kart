# Generated by Django 5.1.4 on 2025-08-04 07:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('email_sent', models.PositiveIntegerField(default=0)),
                ('sms_sent', models.PositiveIntegerField(default=0)),
                ('push_sent', models.PositiveIntegerField(default=0)),
                ('in_app_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('email_delivered', models.PositiveIntegerField(default=0)),
                ('sms_delivered', models.PositiveIntegerField(default=0)),
                ('push_delivered', models.PositiveIntegerField(default=0)),
                ('total_opened', models.PositiveIntegerField(default=0)),
                ('email_opened', models.PositiveIntegerField(default=0)),
                ('push_opened', models.PositiveIntegerField(default=0)),
                ('in_app_opened', models.PositiveIntegerField(default=0)),
                ('total_failed', models.PositiveIntegerField(default=0)),
                ('email_failed', models.PositiveIntegerField(default=0)),
                ('sms_failed', models.PositiveIntegerField(default=0)),
                ('push_failed', models.PositiveIntegerField(default=0)),
                ('order_notifications', models.PositiveIntegerField(default=0)),
                ('promotional_notifications', models.PositiveIntegerField(default=0)),
                ('security_notifications', models.PositiveIntegerField(default=0)),
                ('system_notifications', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True)),
                ('user_filter', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('unsubscribed_count', models.PositiveIntegerField(default=0)),
                ('track_opens', models.BooleanField(default=True)),
                ('track_clicks', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_campaigns', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, related_name='targeted_email_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_order_updates', models.BooleanField(default=True)),
                ('email_promotional', models.BooleanField(default=False)),
                ('email_newsletter', models.BooleanField(default=False)),
                ('email_security_alerts', models.BooleanField(default=True)),
                ('sms_order_updates', models.BooleanField(default=False)),
                ('sms_delivery_updates', models.BooleanField(default=False)),
                ('sms_security_alerts', models.BooleanField(default=False)),
                ('push_order_updates', models.BooleanField(default=True)),
                ('push_promotional', models.BooleanField(default=False)),
                ('push_new_features', models.BooleanField(default=True)),
                ('push_security_alerts', models.BooleanField(default=True)),
                ('in_app_order_updates', models.BooleanField(default=True)),
                ('in_app_promotional', models.BooleanField(default=True)),
                ('in_app_social', models.BooleanField(default=True)),
                ('do_not_disturb_start', models.TimeField(blank=True, null=True)),
                ('do_not_disturb_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='Asia/Kolkata', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('notification_type', models.CharField(choices=[('order_created', 'Order Created'), ('order_confirmed', 'Order Confirmed'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('order_cancelled', 'Order Cancelled'), ('payment_successful', 'Payment Successful'), ('payment_failed', 'Payment Failed'), ('return_requested', 'Return Requested'), ('return_approved', 'Return Approved'), ('return_rejected', 'Return Rejected'), ('product_back_in_stock', 'Product Back in Stock'), ('vendor_new_order', 'Vendor New Order'), ('vendor_payment_received', 'Vendor Payment Received'), ('user_registered', 'User Registered'), ('password_reset', 'Password Reset'), ('promotional', 'Promotional'), ('system_maintenance', 'System Maintenance')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('variables', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('send_immediately', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
                'ordering': ['notification_type', 'channel'],
                'unique_together': {('notification_type', 'channel', 'is_default')},
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('user_filter', models.JSONField(blank=True, default=dict)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate')),
            ],
            options={
                'db_table': 'notification_batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'), models.Index(fields=['channel', 'status'], name='notificatio_channel_411e8e_idx'), models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'), models.Index(fields=['priority', 'status'], name='notificatio_priorit_f26a58_idx')],
            },
        ),
        migrations.CreateModel(
            name='PushNotificationDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_token', models.TextField(unique=True)),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], max_length=10)),
                ('device_id', models.CharField(blank=True, max_length=255)),
                ('device_name', models.CharField(blank=True, max_length=255)),
                ('app_version', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'push_notification_devices',
                'ordering': ['-last_used'],
                'unique_together': {('user', 'device_token')},
            },
        ),
    ]
